<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.awesomeagile</groupId>
  <artifactId>awesomeagile-parent</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <node.version>v5.0.0</node.version>
    <npm.version>2.7.6</npm.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <junit.version>4.12</junit.version>
    <docker.client.version>3.2.1</docker.client.version>
    <hibernate-jpa-2.1-api.version>1.0.0.Final</hibernate-jpa-2.1-api.version>
    <guava.version>18.0</guava.version>
    <validation-api.version>1.1.0.Final</validation-api.version>
    <spring.boot.version>1.3.0.RC1</spring.boot.version>
    <spring-social-google.version>1.0.0.RELEASE</spring-social-google.version>
  </properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.3.0.RC1</version>
  </parent>

  <profiles>
    <profile>
      <id>local-test</id>
      <properties>
        <postgres.host>localhost</postgres.host>
        <postgres.port>5432</postgres.port>
      </properties>
    </profile>
  </profiles>

  <modules>
    <module>awesomeagile-webapp</module>
    <module>awesomeagile-model</module>
    <module>awesomeagile-dao</module>
  </modules>

  <repositories>
    <repository>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </repository>
    <repository>
      <id>maven-central</id>
      <url>http://repo.maven.apache.org/maven2/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </pluginRepository>
    <pluginRepository>
      <id>frontend-maven-plugin-repository</id>
      <url>https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.awesomeagile</groupId>
        <artifactId>awesomeagile-dao</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.awesomeagile</groupId>
        <artifactId>awesomeagile-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.awesomeagile</groupId>
        <artifactId>awesomeagile-dao-test</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify</groupId>
        <artifactId>docker-client</artifactId>
        <version>${docker.client.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.social</groupId>
        <artifactId>spring-social-google</artifactId>
        <version>${spring-social-google.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- use JPA for data access -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <exclusions>
          <exclusion>
            <!--
                don't use tomcat-jdbc for connection pooling (see
                hikaricp below)
            -->
            <artifactId>tomcat-jdbc</artifactId>
            <groupId>org.apache.tomcat</groupId>
          </exclusion>
        </exclusions>
        <version>${spring.boot.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.7</source>
            <target>1.7</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.5.201505241946</version>
          <executions>
            <execution>
              <!-- set up jacoco collection during testing -->
              <id>prepare</id>
              <phase>test-compile</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/coverage-report</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <!-- generate the coverage report during the test phase -->
              <id>check</id>
              <phase>test</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <rules>
                  <rule>
                    <element>CLASS</element>
                    <excludes>
                      <!-- exclude test cases from coverage reporting -->
                      <exclude>*Test</exclude>
                    </excludes>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>